{"ast":null,"code":"var _jsxFileName = \"/home/lee/Dev/school/python-code-challenge-superheroes/client/src/components/HeroPowerForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeroPowerForm() {\n  _s();\n\n  const [heroes, setHeroes] = useState([]);\n  const [powers, setPowers] = useState([]);\n  const [heroId, setHeroId] = useState(\"\");\n  const [powerId, setPowerId] = useState(\"\");\n  const [strength, setStrength] = useState(\"\");\n  const [formErrors, setFormErrors] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetch(\"/heroes\").then(r => r.json()).then(setHeroes);\n  }, []);\n  useEffect(() => {\n    fetch(\"/powers\").then(r => r.json()).then(setPowers);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const formData = {\n      hero_id: heroId,\n      power_id: powerId,\n      strength\n    };\n    fetch(\"/hero_powers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        history.push(`/heroes/${heroId}`);\n      } else {\n        r.json().then(err => setFormErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"power_id\",\n      children: \"Power:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"power_id\",\n      name: \"power_id\",\n      value: powerId,\n      onChange: e => setPowerId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a power\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), powers.map(power => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: power.id,\n        children: power.name\n      }, power.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"hero_id\",\n      children: \"Hero:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"hero_id\",\n      name: \"hero_id\",\n      value: heroId,\n      onChange: e => setHeroId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a hero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), heroes.map(hero => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: hero.id,\n        children: hero.name\n      }, hero.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"strength\",\n      children: \"Strength:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"strength\",\n      name: \"strength\",\n      value: strength,\n      onChange: e => setStrength(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), formErrors.length > 0 ? formErrors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: err\n    }, err, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Hero Power\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HeroPowerForm, \"CcuAnkP3MfQVMpPqr26K7Co29Os=\", false, function () {\n  return [useHistory];\n});\n\n_c = HeroPowerForm;\nexport default HeroPowerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroPowerForm\");","map":{"version":3,"sources":["/home/lee/Dev/school/python-code-challenge-superheroes/client/src/components/HeroPowerForm.js"],"names":["useEffect","useState","useHistory","HeroPowerForm","heroes","setHeroes","powers","setPowers","heroId","setHeroId","powerId","setPowerId","strength","setStrength","formErrors","setFormErrors","history","fetch","then","r","json","handleSubmit","e","preventDefault","formData","hero_id","power_id","method","headers","body","JSON","stringify","ok","push","err","errors","target","value","map","power","id","name","hero","length","color"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction HeroPowerForm() {\n  const [heroes, setHeroes] = useState([]);\n  const [powers, setPowers] = useState([]);\n  const [heroId, setHeroId] = useState(\"\");\n  const [powerId, setPowerId] = useState(\"\");\n  const [strength, setStrength] = useState(\"\");\n  const [formErrors, setFormErrors] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(\"/heroes\")\n      .then((r) => r.json())\n      .then(setHeroes);\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/powers\")\n      .then((r) => r.json())\n      .then(setPowers);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const formData = {\n      hero_id: heroId,\n      power_id: powerId,\n      strength,\n    };\n    fetch(\"/hero_powers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        history.push(`/heroes/${heroId}`);\n      } else {\n        r.json().then((err) => setFormErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"power_id\">Power:</label>\n      <select\n        id=\"power_id\"\n        name=\"power_id\"\n        value={powerId}\n        onChange={(e) => setPowerId(e.target.value)}\n      >\n        <option value=\"\">Select a power</option>\n        {powers.map((power) => (\n          <option key={power.id} value={power.id}>\n            {power.name}\n          </option>\n        ))}\n      </select>\n      <label htmlFor=\"hero_id\">Hero:</label>\n      <select\n        id=\"hero_id\"\n        name=\"hero_id\"\n        value={heroId}\n        onChange={(e) => setHeroId(e.target.value)}\n      >\n        <option value=\"\">Select a hero</option>\n        {heroes.map((hero) => (\n          <option key={hero.id} value={hero.id}>\n            {hero.name}\n          </option>\n        ))}\n      </select>\n      <label htmlFor=\"strength\">Strength:</label>\n      <input\n        type=\"text\"\n        id=\"strength\"\n        name=\"strength\"\n        value={strength}\n        onChange={(e) => setStrength(e.target.value)}\n      />\n      {formErrors.length > 0\n        ? formErrors.map((err) => (\n            <p key={err} style={{ color: \"red\" }}>\n              {err}\n            </p>\n          ))\n        : null}\n      <button type=\"submit\">Add Hero Power</button>\n    </form>\n  );\n}\n\nexport default HeroPowerForm;\n"]},"metadata":{},"sourceType":"module"}